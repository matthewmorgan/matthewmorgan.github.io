{"version":3,"sources":["AlertDialog.js","App.js","serviceWorker.js","index.js","img/understanding.png","img/breadpos.png","img/buzzdesktop.png","img/buzzonline.png","img/elephantears.png","img/honeycreekschool.png","img/morganandyork.png"],"names":["AlertDialog","props","react_default","a","createElement","Dialog_default","open","aria-labelledby","aria-describedby","DialogTitle_default","id","DialogContent_default","DialogContentText_default","joke","DialogActions_default","Button_default","onClick","handleClose","color","cards","heading","description","image","understanding","href","honeycreekschool","buzzonline","bread","elephantears","morganandyork","buzz","Album","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","getDadJoke","sent","setState","openDialog","text","stop","handleDialogClose","state","objectSpread","undefined","superagent","get","set","classes","Fragment","CssBaseline_default","AppBar_default","position","className","appBar","Toolbar_default","PhotoCamera_default","icon","Typography_default","variant","noWrap","heroUnit","heroContent","component","align","gutterBottom","paragraph","heroButtons","Grid_default","container","spacing","justify","item","classNames","layout","cardGrid","map","card","key","sm","md","lg","Card_default","CardMedia_default","cardMedia","title","CardContent_default","cardContent","footer","React","Component","withStyles","theme","marginRight","unit","backgroundColor","palette","background","paper","maxWidth","margin","padding","concat","marginTop","defineProperty","width","marginLeft","breakpoints","up","height","display","flexDirection","paddingTop","flexGrow","Boolean","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.ec4f0bbc.chunk.js","sourcesContent":["import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nexport default function AlertDialog(props) {\n  return (\n      <div>\n        <Dialog\n            open={props.open}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">Enjoy a Dad Joke</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              {props.joke}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={props.handleClose} color=\"primary\">\n              Go away\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n  )\n}\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport AppBar from '@material-ui/core/AppBar'\nimport Button from '@material-ui/core/Button'\nimport CameraIcon from '@material-ui/icons/PhotoCamera'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Grid from '@material-ui/core/Grid'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport {withStyles} from '@material-ui/core/styles'\n\nimport AlertDialog from './AlertDialog'\n\nimport understanding from './img/understanding.png'\nimport bread from './img/breadpos.png'\nimport buzz from './img/buzzdesktop.png'\nimport buzzonline from './img/buzzonline.png'\nimport elephantears from './img/elephantears.png'\nimport honeycreekschool from './img/honeycreekschool.png'\nimport morganandyork from './img/morganandyork.png'\nimport superagent from \"superagent\"\n\nconst styles = theme => ({\n  appBar:      {\n    position: 'relative',\n  },\n  icon:        {\n    marginRight: theme.spacing.unit * 2,\n  },\n  heroUnit:    {\n    backgroundColor: theme.palette.background.paper,\n  },\n  heroContent: {\n    maxWidth: 600,\n    margin:   '0 auto',\n    padding:  `${theme.spacing.unit * 8}px 0 ${theme.spacing.unit * 6}px`,\n  },\n  heroButtons: {\n    marginTop: theme.spacing.unit * 4,\n  },\n  layout:      {\n    width:                                                     'auto',\n    marginLeft:                                                theme.spacing.unit * 3,\n    marginRight:                                               theme.spacing.unit * 3,\n    [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\n      width:       1100,\n      marginLeft:  'auto',\n      marginRight: 'auto',\n    },\n  },\n  cardGrid:    {\n    padding: `${theme.spacing.unit * 8}px 0`,\n  },\n  card:        {\n    height:        '100%',\n    display:       'flex',\n    flexDirection: 'column',\n  },\n  cardMedia:   {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer:      {\n    backgroundColor: theme.palette.background.paper,\n    padding:         theme.spacing.unit * 6,\n  },\n})\n\nconst cards = [\n  {\n    heading:     'JSTOR Understanding Series',\n    description: 'A web application to assist high school students in researching works of literature and historical documents.  Built at Ithaka in Vue.',\n    image:       understanding,\n    href:        'https://www.jstor.org/understand'\n  },\n  {\n    heading:     'Honeycreek School',\n    description: 'A website built for a community school for social sharing of messages and photos',\n    image:       honeycreekschool\n  },\n  {\n    heading:     'POS Web App',\n    description: 'A tablet optimized point of sale system design for a fast-paced coffeehouse.  Build with Backbone on Node, Espress, and MongoDB',\n    image:       buzzonline\n  },\n  {\n    heading:     'Bread Point of Sale',\n    description: 'A touchscreen optimized retail point of sale and inventory control system.  Built in Java SE and Postgres',\n    image:       bread\n  },\n  {\n    heading:     'E-Commerce Site',\n    description: \"A web app built for a children's clothing store, built with Express and integrated with their bricks and mortar POS through an API written in Express over Postgres\",\n    image:       elephantears\n  },\n  {\n    heading:     'E-Commerce Site',\n    description: 'A web app built for a specialty grocery store, using Express and integrated with their bricks and mortar POS through an API written in Express over Postgres',\n    image:       morganandyork\n  },\n  {\n    heading:     'Buzz Point of Sale',\n    description: 'A touchscreen optimized retail point of sale built for a fast-paced coffee house.  Java SE and Postgres',\n    image:       buzz\n  },\n]\n\nclass Album extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {...props, openDialog: false, joke: undefined}\n  }\n\n  async getDadJoke() {\n    return await superagent\n        .get('https://icanhazdadjoke.com/')\n        .set('accept', 'text/plain')\n  }\n\n  handleClick = async () => {\n    const joke = await this.getDadJoke()\n    this.setState({\n      openDialog: true,\n      joke: joke.text\n    })\n  }\n\n  handleDialogClose = () => {\n    this.setState({ openDialog: false });\n  };\n\n  render() {\n    const classes = this.state.classes;\n    return (\n        <React.Fragment>\n          <CssBaseline/>\n          <AppBar position=\"static\" className={classes.appBar}>\n            <Toolbar>\n              <CameraIcon className={classes.icon}/>\n              <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                Matt Morgan's Projects\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <main>\n            {/* Hero unit */}\n            <div className={classes.heroUnit}>\n              <div className={classes.heroContent}>\n                <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                  Matt Morgan\n                </Typography>\n                <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" paragraph>\n                  I write software, especially modern web applications.\n                </Typography>\n                <div className={classes.heroButtons}>\n                  <Grid container spacing={16} justify=\"center\">\n                    <Grid item>\n                      <Button variant=\"contained\" color=\"primary\" href=\"https://github.com/matthewmorgan\">\n                        See my GitHub\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClick}>\n                        Enjoy a dad joke\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n            </div>\n            <AlertDialog open={this.state.openDialog} joke={this.state.joke} handleClose={this.handleDialogClose}/>\n            <div className={classNames(classes.layout, classes.cardGrid)}>\n              {/* End hero unit */}\n              <Grid container spacing={40}>\n                {cards.map(card => (\n                    <Grid item key={card.description} sm={6} md={4} lg={3}>\n                      <Card className={classes.card}>\n                        <CardMedia\n                            className={classes.cardMedia}\n                            image={card.image} // eslint-disable-line max-len\n                            title=\"Image title\"\n                        />\n                        <CardContent className={classes.cardContent}>\n                          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            {card.heading}\n                          </Typography>\n                          <Typography>\n                            {card.description}\n                          </Typography>\n                        </CardContent>\n                      </Card>\n                    </Grid>\n                ))}\n              </Grid>\n            </div>\n          </main>\n          {/* Footer */}\n          <footer className={classes.footer}>\n            <Typography variant=\"h6\" align=\"center\" gutterBottom>\n              Thanks for checking it out!\n            </Typography>\n          </footer>\n          {/* End footer */}\n        </React.Fragment>\n    )\n  }\n}\n\nAlbum.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(Album)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/understanding.906e2226.png\";","module.exports = __webpack_public_path__ + \"static/media/breadpos.59aafe7b.png\";","module.exports = __webpack_public_path__ + \"static/media/buzzdesktop.b8d00457.png\";","module.exports = __webpack_public_path__ + \"static/media/buzzonline.1b51e615.png\";","module.exports = __webpack_public_path__ + \"static/media/elephantears.02c826c3.png\";","module.exports = __webpack_public_path__ + \"static/media/honeycreekschool.e3157250.png\";","module.exports = __webpack_public_path__ + \"static/media/morganandyork.a4c1368e.png\";"],"sourceRoot":""}